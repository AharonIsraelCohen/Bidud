#!/bin/bash

ScriptPath=$(dirname $0)
#SpoolPath="${ScriptPath%???}spool"
#TampPath="${ScriptPath%???}tamplate"
# Check that the user entered 2 argumants

function flagValidate ()
{
	if [ $1 == $2 ] &> /dev/null || [ $1 == $3 ] &> /dev/null
	then
		return 0
	else 
		return 1
	fi
}

function sizeValidate ()
{
        if flagValidate $1 $2 $3
        then
		if numValidate $4
		then
			return 0
		else
			echo the size has to be a number and bigger then 0
	                return 1
		fi
        else
		echo We could not recognized this $1 option..
                return 1
        fi
}

function pathValidate ()
{
	if flagValidate $1 $2 $3
        then
                if [ ! -d $4 ]
                then
                        return 0
                else
                        return 1
                fi
        else
                echo We could not recognized this $1 option..
                return 1
        fi

}


function numValidate ()
{
	if [ $1 -gt 0 ] &> /dev/null
        then
        	return 0
        else
		return 1
        fi
}

function vgValidate ()
{
	wantedVg=$(vgs |awk '{print$1}'| grep -w $1 2> /dev/null)
	if [ "$wantedVg" == "$1" ] && [ ! -z "$1" ] 
	then
		return 0
	else
		return 1
	fi
}

function createFileSystem ()
{
	#actualDisks=$(lshw -short -quiet| grep disk| grep sd| awk '{print$2}') #&> /dev/null
	#echo $actualDisks

	echo start with the creation 

	if lvcreate -t -L $1M $2 &> /dev/null
	then
		echo i am innnnnnnnnnnnnnnnnnnnnnnnnn
		lvName=$( echo $3 | sed 's+/+_+g')
		echo $lvName
		lvcreate -y -n $lvName -L $1M $2 &> /dev/null
		mkfs.ext4 /dev/$2/$lvName &> /dev/null
		uuid=$(blkid | grep $lvName | cut -f 2 -d " ")
		echo "$uuid    $3    ext4    defaults    0    0" >> /etc/fstab
	       	mount /dev/$2/$lvName
	else
		echo No more space on the vgs
	fi

}

function addingNewDisk ()
{
	if lsblk | grep -w $1 &> /dev/null
       	then
	        echo $1 rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr
       		echo $2

		cat $ScriptPath/fdiskParameter | fdisk -c /dev/$1 &> /dev/null 
		pvcreate /dev/$15 &> /dev/null
		vgextend /dev/$2 /dev/$15 &> /dev/null	
	else
	       	echo We can not find the disk $1
		exit 0
	fi
}

function extendFileSystem ()
{
	echo The size $1 
        echo The lv full name $2

        echo start with the extendtion

        if lvextend -t -L +$1M $2 &> /dev/null
        then
		lvextend -L +$1M $2 &> /dev/null
		resize2fs $2
        else
                echo No more space on the vgs
        fi

}


if [ $# -lt 2 ] 
then
	echo You messing some argumants, use --help to get explanation!

elif  [ $# -gt 9 ]
      then
		echo You entered too many inputs, use --help to get explanation!
else 

	case $1 in

		-c | --create)
			#echo we in the create option
			if  [ $# -gt 6 ]
			then
				#echo we have enoufh arguants
				if sizeValidate $2 -s --size $3
				then
					#echo the size option and size is ok
					if flagValidate $4 -v --vg
					then
						#echo the vg option is ok
						if vgValidate $5
							#echo we have this vg
						then
							if flagValidate $6 -p --path
							then
								#echo the flag is good
								if [ ! -d $7 ]
								then
									#echo the dir not exist
									mkdir -p $7
								else
									dirSize=$(du -sh /sizedir/ | cut -c 1-4)
									if [ "$dirSize" != "4.0K" ] 
									then 
										echo the directory is not empty
										exit 0
									fi
								fi

								if flagValidate $8 '--new-disk'
                                                                then
									if [ -z $9 ]
									then
										echo You must ener the disk name
										exit 0
									else
                                                        	        	addingNewDisk $9 $5
									fi
                                                                fi
                                                                        createFileSystem $3 $5 $7
							else
								echo we dont have this $6 
							fi
						else
							echo we dont have such vg, this what we have:
							echo
							vgs
						fi
					else 
						echo We dont have such vg option
					fi
				fi
			else
				echo Not enough argumants
			fi
		;;
	
		-e | --extend)
			if [ $# -gt 4 ]
			then
				if  [ $# -lt 8 ]
				then
        	                	if sizeValidate $2 -s --size $3
                	        	then
                        			if flagValidate $4 -p --path
                                	        then
							if [ -d $5 ]
                                        		then
								currLv=$(df -h | grep -w $5 | awk '{print$1}')
								currVg=$(echo $currLv | cut -f 1 -d "-" | cut -f 4 -d "/")

		                                                if flagValidate $6 '--new-disk'
        		                                        then
                		                                	if [ -z $7 ]
                                                                        then
                                                                                echo You must ener the disk name
                                                                                exit 0
                                                                        else
                                                                                addingNewDisk $7 $currVg
                                                                        fi
								fi

								extendFileSystem $3 $currLv

                                        		else
								echo The directory can not  be found
							fi
						else
							echo $4 'is not an option, use --help..'
                        	                fi
                                	fi
				else
					echo Too many argumants
                	        fi
			else
				echo Not enough argumants
			fi
		;;
	
		-r | --remove)
			if  [ $# -gt 2 ]
			then
				if [ $# -lt 4 ]
				then
					if flagValidate $2 -p --path
                                        then
						if [ -d $3 ]	
						then
							lvName=$( echo $3 | sed 's+/+_+g')
							lvFullPath=$(df -h | grep -w $lvName | awk '{print$1}')
							echo $lvFullPath
							#lvName=$(echo $lvFullPath | cut -f 2 -d "-")
							echo $lvName
							umount $lvFullPath
							uuid=$(blkid | grep $lvName | cut -f 2 -d " " | cut -f 2 -d "=")
							
							echo $uuid
							#cat /etc/fstab | grep $uuid
							sed -i "/$uuid/d" /etc/fstab
							lvremove -y $lvFullPath
							#echo The filesystem is gone, but the directory exist..
#							cat /etc/fstab
						else
							echo There is no file system in this path
						fi
					else
						echo $2 'is not an option, use --help..'
					fi
				else
					echo Too many argumants
				fi
			else
				echo You missing some argumants
			fi
		;;
	
		-h | --help)
                        echo help
		;;

		*)
	       		echo we dont have such option
		;;
	esac
fi
